@inject RepositoriesViewModel repositoriesViewModel
@inject IJSRuntime js

<RadzenDataList AllowPaging="false" WrapItems="true" Data="@repositoriesViewModel.VisibleRepositories" TItem="RepositoryListModel">
    <Template Context="repository">
        <RadzenCard class="w-100 mx-0">
            <div class="row">
                <div class="col mb-1">
                    <a href="@repository.HtmlUrl" Style="color: rgb(13, 15, 16);">
                        <GitHubImage></GitHubImage>
                    </a>
                    <RadzenLink Path="@GetRepositoryPath(repository)" class="h5" Text="@repository.Name"></RadzenLink>
                    <span class="badge badge-dark" hidden="@(!repository.Private)">Private</span>
                </div>
            </div>
            <div class="row text-muted">
                <div class="col-auto" hidden="@repository.Owner.Login.ToVisible()">
                    <div class="d-flex align-content-center align-items-center">
                        <a href="@repository.Owner.HtmlUrl" Style="color: rgb(13, 15, 16);">
                            <RadzenImage Path="@repository.Owner?.AvatarUrl" Class="rounded-circle" Style="max-height: 20px;">
                            </RadzenImage>@repository.Owner.Login
                        </a>
                    </div>
                </div>
                <div class="col-auto" hidden="@repository.Language.ToVisible()">
                    <label>@repository.Language</label>
                </div>
                <div class="col-auto">
                    <label>Updated @repository.UpdatedAt.ToLocalTime().DateTime.ToFriendlyTimeSpan()</label>
                </div>
            </div>
            <div class="row">
                <div class="col-auto">
                    <p class="text-muted" hidden="@repository.Description.ToVisible()">@repository.Description.Shrink()</p>
                </div>
            </div>
            <div class="row text-muted">
                <div class="col-auto" hidden="@repository.License.ToVisible()">
                    <div class="d-flex align-content-center align-items-center" data-toggle="tooltip" data-placement="bottom" title="License">
                        <LicenseImage></LicenseImage>
                        @repository.License
                    </div>
                </div>
                <div class="col-auto" hidden="@repository.Conventions.ToVisible()" data-toggle="tooltip" data-placement="bottom" title="Conventions">
                    <div class="d-flex align-content-center align-items-center">
                        <ListImage></ListImage>
                        @repository.Conventions
                    </div>
                </div>
                <div class="col-auto" hidden="@repository.Checks.ToVisible()" data-toggle="tooltip" data-placement="bottom" title="ConventionChecks">
                    <div class="d-flex align-content-center align-items-center">
                        <EyeImage></EyeImage>
                        @repository.Checks
                    </div>
                </div>
                <div class="col-auto" hidden="@repository.ForksCount.ToVisible()" data-toggle="tooltip" data-placement="bottom" title="Forks">
                    <div class="d-flex align-content-center align-items-center">
                        <ForkImage></ForkImage>
                        @repository.ForksCount
                    </div>
                </div>
                <div class="col-auto" hidden="@repository.StargazersCount.ToVisible()" data-toggle="tooltip" data-placement="bottom" title="Stargazers">
                    <div class="d-flex align-content-center align-items-center">
                        <StarImage></StarImage>
                        @repository.StargazersCount
                    </div>
                </div>
                <div class="col-auto" hidden="@repository.OpenIssuesCount.ToVisible()">
                    <div class="d-flex align-content-center align-items-center" data-toggle="tooltip" data-placement="bottom" title="Open Issues">
                        <IssueImage></IssueImage>
                        @repository.OpenIssuesCount
                    </div>
                </div>
            </div>
        </RadzenCard>
    </Template>
</RadzenDataList>

@code
{
    private string GetRepositoryPath(RepositoryListModel repository)
    {
        return $"repository/{repository.FullName}";
    }


    protected override async Task OnInitializedAsync()
    {
        repositoriesViewModel.PropertyChanged += async (_, e) =>
        {
            if (e.PropertyName == nameof(repositoriesViewModel.VisibleRepositories))
            {
                StateHasChanged();
                await js.InvokeVoidAsync("addTooltips");
            }
        };

        await base.OnInitializedAsync();
    }
}